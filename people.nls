breed [people person]

people-own [
    person_state
    mask ; the probability of the particles not going through
    target ; the positon in the bus
    moving?
    seated?
    die?
]

to-report roll_dice [ probability ]
  report random-float 1 <= probability
end

to init_person [x y]
    
    (ifelse
      roll_dice infected-portion [
         set shape "infected_person"
         set person_state state_infected
      ]
      roll_dice immune-portion [
         set shape "immune_person"
         set person_state state_immune
      ] [
         set shape "susceptible_person"
         set person_state state_susceptible
      ]
    )
    set mask mask_none
    set xcor x
    set ycor y
    set die? false
    ; TODO maximize the target distance from other people
    set target nobody
    
    if roll_dice p-sitting [
        set seated? true
        set target min-one-of (patches with [ occupied? = false and pcolor = seat_color ]) [ distance myself ]
    ]
   
    if target = nobody [
        set seated? false 
        set target one-of patches with [ occupied? = false and pcolor = floor_color ] 
    ]
    

    set moving? false 
    if target != nobody [
        ask target [
            set occupied? true
        ]
        face target
        set moving? true
    ]

end

to leave_bus
    ask target [
      set occupied? false
    ]
  
    set target min-one-of (patches with [ pcolor = door_color ]) [ distance myself ]
    face target
    set moving? true
    set die? true
end 

to person_tick
    
    ; Are we supposed to be moving
    if moving? [
        let current patch-at 0 0

        ; Did we arrive to the target
        ifelse current = target [

            ; Are we supposed to be dead - rip : (
            if die? [
                die
            ]

            set moving? false

            ; Also align with the seat of which the person is currently sitting at
            if seated? [
                let current_seat min-one-of seats [ distance myself ]
                set heading [ heading ] of current_seat
                rt random (sitting-people-rotation-spread * 2) - sitting-people-rotation-spread
            ]
            
        ] [
          face target
          fd 1
        ]
    ]
end


to releaseRNA [ minutes ]
  let n_release [n_RNA] of g_bus
  
  set n_release n_release + dosis minutes mask
  
  ask g_bus [ set n_RNA n_release ]
end

to infect [ minutes ]
   let chance pInfect minutes mask
   
   if roll_dice(chance) [
     set shape "exposed_person"
     set person_state state_exposed
     set new_infections new_infections + 1
   ]
   
   
end

to-report state_susceptible
  report 0
end

to-report state_exposed
  report 4
end

to-report state_infected
  report 1
end

to-report state_immune
  report 2
end

to-report mask_none
    report 0
end

to-report mask_cloth
    report 0.5
end

to-report mask_medical
    report 0.7
end

to-report susceptible_color 
    report [ 0 40 255 ]
end

to-report infected_color
    report [ 255 20 25 ]
end

to-report immune_color
    report [ 255 10 255 ]
end